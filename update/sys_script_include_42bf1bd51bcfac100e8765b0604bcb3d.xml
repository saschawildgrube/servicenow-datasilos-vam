<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_datasilosvam.Implement</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>Implement</name>
        <script><![CDATA[function Implement()
{
	
	
	
function ImplementTable(strAppSysId, strTable)
{
	var GetStringValue = x_snc_devtools.GetStringValue;
	var RenderValue = x_snc_devtools.RenderValue;

	strAppSysId = GetStringValue(strAppSysId);
	strTable = GetStringValue(strTable);

	function Log(strText)
	{
		x_snc_datasilos.Log('ImplementTable: ['+strTable+']: '+strText);
	}
	
	var grSS = new GlideRecord('sys_scope');
	if (grSS.get(strAppSysId) == false)
	{
		Log('Application scope not found.');
		return false;
	}
	
	//Log(RenderValue(grSS));
	
	var strScopePrefix = GetStringValue(grSS.getValue('scope'));
	//Log(RenderValue(strScopePrefix));
	
	var grSDO = new GlideRecord('sys_db_object');
	grSDO.addQuery('name','=',strTable);
	grSDO.query();
	if (grSDO.getRowCount() != 1)
	{
		Log('Table not found.');
		return false;
	}
	
	grSDO.next();

	//Log(RenderValue(grSDO));

	
	function ImplementACL(strName, strOperation)
	{
		Log('ImplementACL: '+strName+' / '+strOperation);
		
		var strRoleSysId = '23df0da71b48d490a89720a8ec4bcb72'; // x_snc_datasilos.manager
		
		var grSSA = new GlideRecord('sys_security_acl');
		grSSA.addQuery('name','=',strName);
		grSSA.addQuery('sys_scope','=',strAppSysId);
		grSSA.addQuery('operation','=',strOperation);
		grSSA.query();
		if (grSSA.getRowCount() == 0)
		{
			Log('ACL does not exist yet. Creating it...');
			grSSA.initialize();
			grSSA.active = true;
			grSSA.name = strName;
			grSSA.operation = strOperation;
			grSSA.sys_scope = strAppSysId;
			grSSA.insert();
		}
		
		var grSSA = new GlideRecord('sys_security_acl');
		grSSA.addQuery('name','=',strName);
		grSSA.addQuery('sys_scope','=',strAppSysId);
		grSSA.addQuery('operation','=',strOperation);
		grSSA.query();
		while(grSSA.next())
		{
			Log('ACL '+strName+' / '+strOperation+' found. Now adding role...');
		
			var grSSAR = new GlideRecord('sys_security_acl_role');
			grSSAR.addQuery('sys_scope','=',strAppSysId);
			grSSAR.addQuery('sys_security_acl','=',grSSA.sys_id);
			grSSAR.setWorkflow(false);
			grSSAR.query();
			while (grSSAR.next())
			{
				grSSAR.deleteRecord();
			}		
			
			var grSAR = new GlideRecord('sys_security_acl_role');
			grSAR.setWorkflow(false);
			grSAR.addQuery('sys_security_acl','=','grSSA.sys_id');
			grSAR.addQuery('sys_user_role','=','grSSA.sys_id');
			grSAR.query();
			if (grSAR.getRowCount() == 0)
			{
				grSAR.initialize();
				grSAR.sys_security_acl = grSSA.sys_id;
				grSAR.sys_user_role = strRoleSysId;
				grSAR.sys_scope = strAppSysId;
				grSAR.insert();
			}
		}

		
	}
	
	function ImplementField(strField)
	{
		strField = strScopePrefix +'_'+strField;
		Log('ImplementField: '+strField);
		ImplementACL(strTable+'.'+strField, 'read');
		ImplementACL(strTable+'.'+strField, 'write');
	}
	
	
	ImplementField('global');
	ImplementField('supervisor_whitelist');
	ImplementField('group_whitelist');
	ImplementField('security_clearance');
	ImplementField('ghost');
	ImplementField('last_maintenance');
		
	return true;
}	
	
	
	
	
	
	//var ImplementTable = x_snc_datasilos.ImplementTable;
	var strAppSysId = '4f1d5e84db0b6c10ba15a35305961928'; 
	ImplementTable(strAppSysId,  'sn_vaccine_sm_request');
	ImplementTable(strAppSysId,  'sn_vaccine_sm_task');
	ImplementTable(strAppSysId,  'sn_apptmnt_booking_appointment_booking');
	ImplementTable(strAppSysId,  'csm_consumer_user');
	ImplementTable(strAppSysId,  'sn_vaccine_sm_personal_info');
	
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>sascha.wildgrube</sys_created_by>
        <sys_created_on>2021-03-21 20:01:08</sys_created_on>
        <sys_id>42bf1bd51bcfac100e8765b0604bcb3d</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>Implement</sys_name>
        <sys_package display_value="DataSilosVAM" source="x_snc_datasilosvam">4f1d5e84db0b6c10ba15a35305961928</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DataSilosVAM">4f1d5e84db0b6c10ba15a35305961928</sys_scope>
        <sys_update_name>sys_script_include_42bf1bd51bcfac100e8765b0604bcb3d</sys_update_name>
        <sys_updated_by>sascha.wildgrube</sys_updated_by>
        <sys_updated_on>2021-03-21 21:21:24</sys_updated_on>
    </sys_script_include>
</record_update>
